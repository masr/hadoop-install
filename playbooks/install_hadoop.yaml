- name: Install hadoop
  hosts: "{{ variable_hosts | default('all') }}"
  tasks:
    - name: load vars
      include_vars: file="{{ vars_file | default('vars/default.yaml') }}"

    - name: before install preparation
      include: before_install_service.yaml

    - name: sync hadoop release
      unarchive: src=../releases/{{ hadoop_release_tarball }} dest={{ install_base_dir }}/releases owner=root group=hadoop
      when: (sync_release is not defined) or (sync_release is defined and not sync_release|bool)

    - name: hadoop soft link
      file: src=releases/{{ hadoop_release_version }} path={{ install_base_dir }}/hadoop state=link

    - name: create hadoop confs dir
      file: path={{ item }} state=directory mode=0755 owner=root group=hadoop
      with_items:
        - "{{ install_base_dir }}/confs/hadoop"
        - "{{ install_base_dir }}/confs/hadoop/conf"
        - "{{ install_base_dir }}/run"

    - name: create runtime dir for hdfs
      file: path={{ item }} state=directory mode=0755 owner=hdfs group=hadoop
      with_items:
        - "{{ install_base_dir }}/run/hdfs"

    - name: create runtime dir for yarn
      file: path={{ item }} state=directory mode=0755 owner=yarn group=hadoop
      with_items:
        - "{{ install_base_dir }}/run/yarn"

    - name: create hadoop pid dir
      file: path={{ item }} state=directory mode=0775 owner=root group=hadoop
      with_items:
        - "{{ install_base_dir }}/run/pids"

    - name: sync hadoop confs
      copy: src={{ group_conf_dir }}/{{ item }} dest={{ install_base_dir }}/confs/hadoop/conf/{{ item }} mode=0644 owner=root group=hadoop
      with_items:
        - core-site.xml
        - hdfs-site.xml
        - yarn-site.xml
        - hadoop-env.sh
        - yarn-env.sh
        - log4j.properties

      - name: sync hadoop confs
        copy: src={{ group_conf_dir }}/{{ item }} dest={{ install_base_dir }}/confs/hadoop/conf/{{ item }} mode=0400 owner=root group=hadoop
        with_items:
          - container-executor.cfg

    - name: create conf soft link
      file: src={{ install_base_dir }}/confs/hadoop/conf path={{ install_base_dir }}/hadoop/etc/hadoop state=link force=yes

    - name: create hadoop log dir
      file: path={{ item }} state=directory mode=0775 owner=root group=hadoop
      with_items:
        - "{{hadoop_log_dir}}"
      ignore_errors: yes

    - name: create namenode dir:
      file: path={{ item }} state=directory mode=0755 owner=hdfs group=hadoop
      with_items: {{dfs_namenode_name_dir}}
      when: '"namenode" in group_names'

    - name: create datanode dir
      file: path={{ item }} state=directory mode=0755 owner=hdfs group=hadoop
      with_items: {{dfs_datanode_data_dir}}
      when: '"datanode" in group_names'

    - name: create nodemanager log dirs
      file: path={{ item }} state=directory mode=0755 owner=yarn group=hadoop
      with_items: {{yarn_nodemanager_log_dirs}}
      when: '"node_manager" in group_names'

    - name: create nodemanager local dir
      file: path={{ item }} state=directory mode=0755 owner=yarn group=hadoop
      with_items: {{yarn_nodemanager_local_dirs}}
      when: '"node_manager" in group_names'

    - name: create journal node dir
      file: path={{ item }} state=directory mode=0755 owner=hdfs group=hadoop
      with_items:
        - {{dfs.journalnode.edits.dir}}
      when: '"journal_node" in group_names'

