- name: Install hadoop for config group {{ config_group_name }}
  hosts: "{{ variable_hosts | default('all') }}"
  tasks:
    - name: load vars
      include_vars: file="{{ vars_file | default('vars/default.yaml') }}"

    - include_tasks: include/before_install_service.yaml
      vars:
        service_user: "{{ item }}"
      with_items:
        - hdfs
        - yarn
        - mapred

    - name: delete hadoop release
      file: path={{ hadoop_releases_dir }}/{{ hadoop_release_version }} state=absent
      when: (sync_release is not defined) or (sync_release is defined and sync_release|bool)

    - name: sync hadoop release
      unarchive: src=../releases/{{ hadoop_release_tarball }} dest={{ hadoop_releases_dir }} owner=root group=hadoop
      when: (sync_release is not defined) or (sync_release is defined and sync_release|bool)

    - name: create hadoop soft link
      file: src={{ hadoop_releases_dir }}/{{ hadoop_release_version }} path={{ install_base_dir }}/hadoop state=link

    - name: sync spark shuffle network jar file
      copy: src={{ item }} dest={{ install_base_dir }}/hadoop/share/hadoop/yarn/lib/ owner=root group=hadoop
      with_fileglob:
        - "../releases/jars/spark-network-yarn_*.jar"
        - "../releases/jars/spark-network-common_*.jar"
        - "../releases/jars/spark-network-shuffle_*.jar"
      when: ((sync_release is not defined) or (sync_release is defined and sync_release|bool)) and "nodemanager" in group_names

    - name: create hadoop confs dir
      file: path={{ item }} state=directory mode=0755 owner=root group=hadoop
      with_items:
        - "{{ hadoop_confs_dir }}/hadoop/conf"

    - name: sync hadoop confs
      template: src={{ group_conf_dir }}/{{ item.name }} dest={{ hadoop_confs_dir }}/hadoop/conf/{{ item.name }} mode={{ item.mode }} owner=root group=hadoop
      with_items:
        - {name: core-site.xml, mode: "0644"}
        - {name: hdfs-site.xml, mode: "0644"}
        - {name: hadoop-env.sh, mode: "0644"}
        - {name: yarn-site.xml, mode: "0644"}
        - {name: yarn-env.sh, mode: "0644"}
        - {name: log4j.properties, mode: "0644"}
        - {name: topology.py, mode: "0755"}

    - name: sync hdfs hadoop confs
      template: src={{ group_conf_dir }}/{{ item }} dest={{ hadoop_confs_dir }}/hadoop/conf/{{ item }} mode=0644 owner=root group=hadoop
      with_items:
        - hdfs-include
      when: '"namenode" in group_names'

    - name: sync yarn hadoop confs
      template: src={{ group_conf_dir }}/{{ item }} dest={{ hadoop_confs_dir }}/hadoop/conf/{{ item }} mode=0644 owner=root group=hadoop
      with_items:
        - yarn-include
        - capacity-scheduler.xml
      when: '"resourcemanager" in group_names'

    - name: sync mapred hadoop confs
      template: src={{ group_conf_dir }}/{{ item }} dest={{ hadoop_confs_dir }}/hadoop/conf/{{ item }} mode=0644 owner=root group=hadoop
      with_items:
        - mapred-site.xml
        - mapred-env.sh
      when: '"jobhistoryserver" in group_names'

    - name: sync hdfs exclude file
      template: content="" dest={{ hadoop_confs_dir }}/hadoop/conf/{{ item }} mode=0644 owner=root group=hadoop force=no
      with_items:
        - hdfs-exclude
      when: '"namenode" in group_names'

    - name: sync yarn exclude file
      template: content="" dest={{ hadoop_confs_dir }}/hadoop/conf/{{ item }} mode=0644 owner=root group=hadoop force=no
      with_items:
        - yarn-exclude
      when: '"resourcemanager" in group_names'

    - name: sync container-executor.cfg
      template: src={{ group_conf_dir }}/{{ item }} dest={{ hadoop_confs_dir }}/hadoop/conf/{{ item }} mode=0400 owner=root group=hadoop
      with_items:
        - container-executor.cfg
      when: '"nodemanager" in group_names'


    - name: delete original  hadoop/etc/hadoop
      file: path={{ install_base_dir }}/hadoop/etc/hadoop state=absent
      when: ((sync_release is not defined) or (sync_release is defined and sync_release|bool))

    - name: create hadoop conf soft link
      file: src={{ hadoop_confs_dir }}/hadoop/conf path={{ install_base_dir }}/hadoop/etc/hadoop state=link


    - name: create namenode dir
      file: path={{ item }} state=directory mode=0755 owner=hdfs group=hadoop
      with_items: "{{dfs_namenode_name_dir}}"
      when: '"namenode" in group_names'

    - name: create datanode dir
      file: path={{ item }} state=directory mode=0755 owner=hdfs group=hadoop
      with_items: "{{dfs_datanode_data_dir}}"
      when: '"datanode" in group_names'

    - name: create nodemanager log dirs
      file: path={{ item }} state=directory mode=0755 owner=yarn group=hadoop
      with_items: "{{yarn_nodemanager_log_dir}}"
      when: '"nodemanager" in group_names'

    - name: create nodemanager local dir
      file: path={{ item }} state=directory mode=0755 owner=yarn group=hadoop
      with_items: "{{yarn_nodemanager_local_dir}}"
      when: '"nodemanager" in group_names'

    - name: create journalnode dir
      file: path={{ item }} state=directory mode=0755 owner=hdfs group=hadoop
      with_items:
        - "{{dfs_journalnode_edits_dir}}"
      when: '"journalnode" in group_names'

    - name: install systemd service
      include_tasks: include/install_systemd_service.yml
      vars:
        service_name: "{{ item }}"
      with_items:
        - namenode
        - zkfc
        - journalnode
        - datanode
        - resourcemanager
        - nodemanager
        - jobhistoryserver